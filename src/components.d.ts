/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface MyBackdrop {}
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyModal {
    'content': string;
    'open': () => Promise<void>;
    'titles': string;
  }
  interface MyModalBundle {
    'content': string;
    'open': () => Promise<void>;
    'titles': string;
  }
}

declare global {


  interface HTMLMyBackdropElement extends Components.MyBackdrop, HTMLStencilElement {}
  var HTMLMyBackdropElement: {
    prototype: HTMLMyBackdropElement;
    new (): HTMLMyBackdropElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLMyModalElement extends Components.MyModal, HTMLStencilElement {}
  var HTMLMyModalElement: {
    prototype: HTMLMyModalElement;
    new (): HTMLMyModalElement;
  };

  interface HTMLMyModalBundleElement extends Components.MyModalBundle, HTMLStencilElement {}
  var HTMLMyModalBundleElement: {
    prototype: HTMLMyModalBundleElement;
    new (): HTMLMyModalBundleElement;
  };
  interface HTMLElementTagNameMap {
    'my-backdrop': HTMLMyBackdropElement;
    'my-component': HTMLMyComponentElement;
    'my-modal': HTMLMyModalElement;
    'my-modal-bundle': HTMLMyModalBundleElement;
  }
}

declare namespace LocalJSX {
  interface MyBackdrop {}
  interface MyComponent {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }
  interface MyModal {
    'content'?: string;
    'onClose'?: (event: CustomEvent<any>) => void;
    'titles'?: string;
  }
  interface MyModalBundle {
    'content'?: string;
    'titles'?: string;
  }

  interface IntrinsicElements {
    'my-backdrop': MyBackdrop;
    'my-component': MyComponent;
    'my-modal': MyModal;
    'my-modal-bundle': MyModalBundle;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'my-backdrop': LocalJSX.MyBackdrop & JSXBase.HTMLAttributes<HTMLMyBackdropElement>;
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
      'my-modal': LocalJSX.MyModal & JSXBase.HTMLAttributes<HTMLMyModalElement>;
      'my-modal-bundle': LocalJSX.MyModalBundle & JSXBase.HTMLAttributes<HTMLMyModalBundleElement>;
    }
  }
}


